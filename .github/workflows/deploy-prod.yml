name: Promote image to production

on:
  pull_request:
    branches: 
      - main
    types:
      - closed

env:
  PROJECT_ID: 'windy-orb-218701'
  REGION: 'us-central1'
  DOCKER_REPO: 'deploydocus'
  DEMO_DOCKER_IMAGE_NAME: 'deploydocus-demo'
  PROD_DOCKER_IMAGE_NAME: 'deploydocus'
  CLOUD_RUN_SERVICE: 'deploydocus'
        
jobs:
  retag-and-deploy:
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.head_ref, 'deploy-prod-')
    environment: demo
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.SERVICE_ACCOUNT}}'
          token_format: 'access_token'
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'
      - id: extract-version
        name: Extract version from branch name
        run: echo "version=$(head -n 1 release/deploy-prod.txt | awk -F', ' '{print $2}')" >> $GITHUB_OUTPUT
      - name: Generate image names
        id: generate-image-names
        run: |
          echo "image_name=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DEMO_DOCKER_IMAGE_NAME }}:${{ steps.extract-version.outputs.version }}" >> $GITHUB_OUTPUT
          echo "prod_image_name=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.PROD_DOCKER_IMAGE_NAME }}:${{ steps.extract-version.outputs.version }}" >> $GITHUB_OUTPUT
      - name: Pull Image from Demo
        run: |
          docker pull ${{ steps.generate-image-names.outputs.image_name }}
      - name: Retag & Push to Production
        run: |
          docker tag ${{ steps.generate-image-names.outputs.image_name }} ${{ steps.generate-image-names.outputs.prod_image_name }}
          docker push ${{ steps.generate-image-names.outputs.prod_image_name }}
      - id: 'deploy'
        name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.CLOUD_RUN_SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ steps.generate-image-names.outputs.prod_image_name }}'
